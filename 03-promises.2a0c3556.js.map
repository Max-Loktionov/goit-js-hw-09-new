{"version":3,"sources":["js/03-promises.js"],"names":["createPromise","position","delay","Math","random","isSuccess","promise","Promise","resolve","reject","setTimeout","console","log","then","value","error"],"mappings":";AAAA,SAASA,EAAcC,EAAUC,GACTC,KAAKC,SAS7B,MAAMC,GAAY,EAEZC,EAAU,IAAIC,QAAQ,CAACC,EAASC,KACpCC,WAAW,KAEPF,EAAQ,8CAIT,OAILG,QAAQC,IAAI,yBAGZN,EAAQO,KAENC,IACEH,QAAQC,IAAI,wCACZD,QAAQC,IAAIE,IAGdC,IACEJ,QAAQC,IAAI,uCACZD,QAAQC,IAAIG,KAKhBJ,QAAQC,IAAI","file":"03-promises.2a0c3556.js","sourceRoot":"../src","sourcesContent":["function createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    // Fulfill\n  } else {\n    // Reject\n  }\n}\n// ===================================================================================\n// Change value of isSuccess variable to call resolve or reject\nconst isSuccess = true;\n\nconst promise = new Promise((resolve, reject) => {\n  setTimeout(() => {\n    if (isSuccess) {\n      resolve(\"Success! Value passed to resolve function\");\n    } else {\n      reject(\"Error! Error passed to reject function\");\n    }\n  }, 2000);\n});\n\n// Will run first\nconsole.log(\"Before promise.then()\");\n\n// Registering promise callbacks\npromise.then(\n  // onResolve will run third or not at all\n  value => {\n    console.log(\"onResolve call inside promise.then()\");\n    console.log(value); // \"Success! Value passed to resolve function\"\n  },\n  // onReject will run third or not at all\n  error => {\n    console.log(\"onReject call inside promise.then()\");\n    console.log(error); // \"Error! Error passed to reject function\"\n  }\n);\n\n// Will run second\nconsole.log(\"After promise.then()\");"]}